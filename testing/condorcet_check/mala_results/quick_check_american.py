import os
import sys
sys.path.append('/Users/xiaokaren/MyPythonCode/ranked_choice_voting/rcv_proposal')
import main_methods3 as mm
import david_methods as dm
import pandas as pd

root_dir = '/Users/xiaokaren/MyPythonCode/ranked_choice_voting/rcv_proposal/american/processed_data'
diff_file = '/Users/xiaokaren/MyPythonCode/ranked_choice_voting/rcv_proposal/david_methods/condorcet_check/mala_results/american_diff.txt'
processed_file = '/Users/xiaokaren/MyPythonCode/ranked_choice_voting/rcv_proposal/david_methods/condorcet_check/mala_results/american_processed.txt'
error_d = ["Minneapolis_11052013_Mayor.csv", 
"Portland_D1_2024.csv", 
"Portland_D3_2024.csv", 
"Portland_D2_2024.csv", 
"Portland_D4_2024.csv", 
"Oakland_11082022_Mayor.csv", 
"Oakland_11052024_CityCouncil_AtLarge.csv", 
"SanFrancisco_11022004_BoardofSupervisorsDistrict5.csv", 
"SanFrancisco_11082011_Mayor.csv", 
"SanFrancisco_11052024_Mayor.csv", 
"SanFrancisco_11022010_BoardofSupervisorsDistrict10.csv", 
"NewYorkCity_06222021_DEMCouncilMember27thCouncilDistrict.csv", 
"NewYorkCity_06222021_DEMMayorCitywide.csv", 
"NewYorkCity_06222021_DEMBoroughPresidentKings.csv", 
"NewYorkCity_06222021_DEMCouncilMember26thCouncilDistrict.csv", 
"NewYorkCity_06222021_DEMComptrollerCitywide.csv", 
"NewYorkCity_06222021_DEMCouncilMember9thCouncilDistrict.csv", 
"NewYorkCity_06222021_DEMCouncilMember7thCouncilDistrict.csv", 
"Cambridge_11082011_CityCouncil.csv", 
"Cambridge_11152019_CityCouncil.csv", 
"Cambridge_11072017_CityCouncil.csv", 
"Cambridge_11062001_CityCouncil.csv", 
"Cambridge_11032009_CityCouncil.csv", 
"Cambridge_11072023_CityCouncil.csv", 
"Cambridge_11062007_CityCouncil.csv", 
"Cambridge_11152019_SchoolCommittee.csv", 
"Cambridge_11032015_SchoolCommittee.csv", 
"Cambridge_11082011_SchoolCommittee.csv", 
"Cambridge_11072023_SchoolBoard.csv", 
"Cambridge_11052013_CityCouncil.csv", 
"Cambridge_11072017_SchoolCommittee.csv", 
"Cambridge_11032015_CityCouncil.csv", 
"Cambridge_11082005_CityCouncil.csv", 
"Cambridge_11042003_CityCouncil.csv"]

processed = ['Eastpointe_11022021_CityCouncil.csv', 
'Eastpointe_11052019_CityCouncil.csv', 
'StLouisPark_11022021_CityCouncilWard3.csv', 
'StLouisPark_11022021_CityCouncilWard2.csv', 
'StLouisPark_11022021_CityCouncilWard1.csv', 
'StLouisPark_11022021_CityCouncilWard4.csv', 
'Alaska_11082022_HouseDistrict23.csv', 
'Alaska_11082022_HouseDistrict37.csv', 
'Alaska_11082022_HouseDistrict36.csv', 
'Alaska_11082022_HouseDistrict22.csv', 
'Alaska_08162022_HouseofRepresentativesSpecial.csv', 
'Alaska_11082022_HouseDistrict34.csv', 
'Alaska_11082022_HouseDistrict20.csv', 
'Alaska_11082022_HouseDistrict21.csv', 
'Alaska_11082022_HouseDistrict35.csv', 
'Alaska_11082022_HouseDistrict19.csv', 
'Alaska_11082022_HouseDistrict31.csv', 
'Alaska_11082022_HouseDistrict25.csv', 
'Alaska_11082022_HouseDistrict24.csv', 
'Alaska_11082022_HouseDistrict30.csv', 
'Alaska_11082022_HouseDistrict18.csv', 
'Alaska_11082022_HouseDistrict26.csv', 
'Alaska_11082022_HouseDistrict32.csv', 
'Alaska_11052024_StateHouseD40.csv', 
'Alaska_11082022_HouseDistrict33.csv', 
'Alaska_11082022_HouseDistrict27.csv', 
'Alaska_11082022_HouseDistrict40.csv', 
'Alaska_11052024_StateHouseD33.csv', 
'Alaska_11052024_StateHouseD27.csv', 
'Alaska_11082022_HouseDistrict1.csv', 
'Alaska_11052024_StateHouseD26.csv', 
'Alaska_11052024_StateHouseD32.csv', 
'Alaska_11052024_StateHouseD1.csv', 
'Alaska_11082022_SenateDistrictA.csv', 
'Alaska_11052024_StateSenateJ.csv', 
'Alaska_11052024_StateSenateH.csv', 
'Alaska_11082022_SenateDistrictC.csv', 
'Alaska_11052024_StateHouseD3.csv', 
'Alaska_11052024_StateHouseD24.csv', 
'Alaska_11052024_StateHouseD30.csv', 
'Alaska_11052024_StateHouseD18.csv', 
'Alaska_11082022_HouseDistrict2.csv', 
'Alaska_11082022_HouseDistrict3.csv', 
'Alaska_11052024_StateHouseD19.csv', 
'Alaska_11052024_StateHouseD31.csv', 
'Alaska_11052024_StateHouseD25.csv', 
'Alaska_11052024_StateHouseD2.csv', 
'Alaska_11082022_SenateDistrictB.csv', 
'Alaska_11082022_GovernorLieutenantGovernor.csv', 
'Alaska_11082022_SenateDistrictQ.csv', 
'Alaska_11082022_SenateDistrictF.csv', 
'Alaska_11052024_StateHouseD6.csv', 
'Alaska_11052024_StateHouseD21.csv', 
'Alaska_11052024_StateHouseD35.csv', 
'Alaska_11082022_HouseDistrict7.csv', 
'Alaska_11082022_HouseDistrict6.csv', 
'Alaska_11052024_StateHouseD34.csv', 
'Alaska_11052024_StateHouseD20.csv', 
'Alaska_11052024_StateHouseD7.csv', 
'Alaska_11082022_SenateDistrictG.csv', 
'Alaska_11082022_SenateDistrictP.csv', 
'Alaska_11052024_StateSenateL.csv', 
'Alaska_11052024_StateSenateN.csv', 
'Alaska_11082022_SenateDistrictR.csv', 
'Alaska_11082022_SenateDistrictE.csv', 
'Alaska_11052024_StateHouseD5.csv', 
'Alaska_11052024_StateHouseD36.csv', 
'Alaska_11052024_StateHouseD22.csv', 
'Alaska_11082022_HouseDistrict4.csv', 
'Alaska_11082022_HouseDistrict5.csv', 
'Alaska_11052024_StateHouseD23.csv', 
'Alaska_11052024_StateHouseD37.csv', 
'Alaska_11052024_StateHouseD4.csv', 
'Alaska_11082022_SenateDistrictD.csv', 
'Alaska_11082022_SenateDistrictS.csv', 
'Alaska_11052024_StateSenateB.csv', 
'Alaska_11082022_SenateDistrictI.csv', 
'Alaska_11052024_StateHouseD9.csv', 
'Alaska_11052024_StateHouseD12.csv', 
'Alaska_11082022_HouseDistrict8.csv', 
'Alaska_11082022_HouseDistrict9.csv', 
'Alaska_11052024_StateHouseD13.csv', 
'Alaska_11052024_StateHouseD8.csv', 
'Alaska_11082022_SenateDistrictH.csv', 
'Alaska_11082022_USRepresentative.csv', 
'Alaska_11052024_StateSenateT.csv', 
'Alaska_11082022_SenateDistrictJ.csv', 
'Alaska_11052024_StateHouseD11.csv', 
'Alaska_11052024_StateHouseD39.csv', 
'Alaska_11052024_StateHouseD38.csv', 
'Alaska_11052024_StateHouseD10.csv', 
'Alaska_11082022_SenateDistrictK.csv', 
'Alaska_11052024_StateSenateD.csv', 
'Alaska_11082022_SenateDistrictO.csv', 
'Alaska_11052024_StateHouseD28.csv', 
'Alaska_11052024_StateHouseD14.csv', 
'Alaska_11052024_StateHouseD15.csv', 
'Alaska_11052024_StateHouseD29.csv', 
'Alaska_11082022_SenateDistrictN.csv', 
'Alaska_11052024_StateSenateR.csv', 
'Alaska_11052024_StateSenateP.csv', 
'Alaska_11082022_SenateDistrictL.csv', 
'Alaska_11082022_USSenator.csv', 
'Alaska_11052024_StateHouseD17.csv', 
'Alaska_11052024_StateHouseD16.csv', 
'Alaska_11082022_SenateDistrictM.csv', 
'Alaska_11052024_StateSenateF.csv', 
'Alaska_11052024_President.csv', 
'Alaska_11082022_HouseDistrict16.csv', 
'Alaska_11082022_HouseDistrict17.csv', 
'Alaska_11082022_HouseDistrict15.csv', 
'Alaska_11082022_HouseDistrict29.csv', 
'Alaska_11082022_HouseDistrict28.csv', 
'Alaska_11082022_HouseDistrict14.csv', 
'Alaska_11082022_HouseDistrict38.csv', 
'Alaska_11082022_HouseDistrict10.csv', 
'Alaska_11082022_HouseDistrict11.csv', 
'Alaska_11082022_HouseDistrict39.csv', 
'Alaska_11052024_US_House.csv', 
'Alaska_11082022_HouseDistrict13.csv', 
'Alaska_11082022_HouseDistrict12.csv', 
'Minneapolis_11072023_CityCouncilWard12.csv', 
'Minneapolis_11072017_BoardofEstimateandTaxation.csv', 
'Minneapolis_11072017_ParkBoardAtLarge.csv', 
'Minneapolis_11072017_Ward6CityCouncil.csv', 
'Minneapolis_11072017_Mayor.csv', 
'Minneapolis_11062009_PRBoardDistrict6.csv', 
'Minneapolis_11062009_Ward10CityCouncil.csv', 
'Minneapolis_11072023_CityCouncilWard13.csv', 
'Minneapolis_11022021_BoardofEstimateandTaxationAtLarge.csv', 
'Minneapolis_11072017_Ward1CityCouncil.csv', 
'Minneapolis_11062009_PRBoardDistrict5.csv', 
'Minneapolis_11062009_PRBoardDistrict4.csv', 
'Minneapolis_11072017_Ward9CityCouncil.csv', 
'Minneapolis_11072023_CityCouncilWard10.csv', 
'Minneapolis_11062009_BoardofEstimateandTaxation.csv', 
'Minneapolis_11072017_Ward8CityCouncil.csv', 
'Minneapolis_11022021_Mayor.csv', 
'Minneapolis_11062009_PRBoardDistrict1.csv', 
'Minneapolis_11022021_ParkBoardAtLarge.csv', 
'Minneapolis_11062009_Ward11CityCouncil.csv', 
'Minneapolis_11052013_PRBoardDistrict6.csv', 
'Minneapolis_11062009_PRBoardDistrict3.csv', 
'Minneapolis_11062009_PRBoardDistrict2.csv', 
'Minneapolis_11072017_Ward7CityCouncil.csv', 
'Minneapolis_11022021_CityCouncilWard4.csv', 
'Minneapolis_11062009_Ward13CityCouncil.csv', 
'Minneapolis_11072017_Ward5CityCouncil.csv', 
'Minneapolis_11022021_CityCouncilWard10.csv', 
'Minneapolis_11022021_CityCouncilWard12.csv', 
'Minneapolis_11022021_CityCouncilWard7.csv', 
'Minneapolis_11022021_CityCouncilWard6.csv', 
'Minneapolis_11072017_Ward2CityCouncil.csv', 
'Minneapolis_11022021_CityCouncilWard13.csv', 
'Minneapolis_11072017_Ward3CityCouncil.csv', 
'Minneapolis_11022021_CityCouncilWard2.csv', 
'Minneapolis_11022021_CityCouncilWard3.csv', 
'Minneapolis_11072017_Ward4CityCouncil.csv', 
'Minneapolis_11022021_CityCouncilWard1.csv', 
'Minneapolis_11072023_CityCouncilWard8.csv', 
'Minneapolis_11062009_Ward12CityCouncil.csv', 
'Minneapolis_11072023_CityCouncilWard5.csv', 
'Minneapolis_11072017_PRBoardDistrict3.csv', 
'Minneapolis_11072017_PRBoardDistrict2.csv', 
'Minneapolis_08112020_Ward6CityCouncilSpecialElection.csv', 
'Minneapolis_11072023_CityCouncilWard4.csv', 
'Minneapolis_11062009_Ward7CityCouncil.csv', 
'Minneapolis_11052013_ParkRecBoardAtLarge.csv', 
'Minneapolis_11072023_CityCouncilWard6.csv', 
'Minneapolis_11062009_Ward8CityCouncil.csv', 
'Minneapolis_11062009_Mayor.csv', 
'Minneapolis_11072017_Ward12CityCouncil.csv', 
'Minneapolis_11052013_Ward9CityCouncil.csv', 
'Minneapolis_11072017_PRBoardDistrict1.csv', 
'Minneapolis_11072023_CityCouncilWard7.csv', 
'Minneapolis_11072017_PRBoardDistrict5.csv', 
'Minneapolis_11062009_Ward1CityCouncil.csv', 
'Minneapolis_11062009_Ward9CityCouncil.csv', 
'Minneapolis_11072017_PRBoardDistrict4.csv', 
'Minneapolis_11062009_MinneapolisParkRecBoard.csv', 
'Minneapolis_11072017_Ward13CityCouncil.csv', 
'Minneapolis_11022021_CityCouncilWard8.csv', 
'Minneapolis_11062009_Ward6CityCouncil.csv', 
'Minneapolis_11072017_PRBoardDistrict6.csv', 
'Minneapolis_11022021_CityCouncilWard9.csv', 
'Minneapolis_11052013_Ward13CityCouncil.csv', 
'Minneapolis_11062009_Ward4CityCouncil.csv', 
'Minneapolis_11052013_Ward5CityCouncil.csv', 
'Minneapolis_11022021_ParkBoardDistrict3.csv', 
'Minneapolis_11062009_Ward3CityCouncil.csv', 
'Minneapolis_11022021_ParkBoardDistrict1.csv', 
'Minneapolis 2013-board of estimation and taxation cvr.csv', 
'Minneapolis_11072017_Ward11CityCouncil.csv', 
'Minneapolis_11072017_Ward10CityCouncil.csv', 
'Minneapolis_11022021_ParkBoardDistrict4.csv', 
'Minneapolis_11062009_Ward2CityCouncil.csv', 
'Minneapolis_11022021_ParkBoardDistrict5.csv', 
'Minneapolis_11062009_Ward5CityCouncil.csv', 
'Minneapolis_11022021_ParkBoardDistrict6.csv', 
'PierceCounty_11042008_CountyExecutiveMember.csv', 
'PierceCounty_11032009_CountyAuditor.csv', 
'PierceCounty_11042008_CountyAssessorTreasurer.csv', 
'PierceCounty_11042008_CountyCouncilDistrict2.csv', 
'PortlandOR_110524_Mayor.csv', 
'Portland_06142022_SchoolboardAL-1.csv', 
'Portland_06142022_Schoolboarddistrict5-1.csv', 
'Portland_06082021_charter_commission_at_large.csv', 
'Maine_07142020_DemocraticCandidateforMaineStateHouseDistrict90.csv', 
'Maine_07142020_DemocraticCandidateforMaineStateHouseDistrict47.csv', 
'Maine_11082022_CongressionalDistrict2.csv', 
'Maine_11062018_CongressionalDistrict2.csv', 
'Maine_06122018_DemocraticPrimaryforCD2.csv', 
'Maine_07142020_DemocraticCandidateforMaineStateHouseDistrict41.csv', 
'Maine_07142020_RepublicanCandidateforUSHouseofRepresentativesDistrict2.csv', 
'Maine_07142020_DemocraticCandidateforMaineStateSenateDistrict11.csv']

for dirpath, dirnames, filenames in os.walk(root_dir):
    for filename in filenames:
        if filename not in error_d and filename not in processed and filename.endswith('.csv'):
            print(filename)
            full_path = os.path.join(dirpath, filename)

            df = pd.read_csv(full_path)
            columns = [c for c in df.columns if 'rank' in c]# or c == 'numSeats' or c == 'numCands']
            d_profile = df[columns]
            d_profile = d_profile.value_counts().reset_index(name='Count')

            num_cands = df['numCands'].iloc[0]

            v =  mm.v_profile(full_path)
            candidates = list(v.candidates)
            candidates.remove('skipped')

            matrix = dm.pairwise_comparisons_matrix(d_profile, candidates, num_cands, None)
            david_c_winner = dm.Condorcet_winner(d_profile, candidates, num_cands, None, matrix)

            mala_c_winner = list(mm.Condorcet(v,candidates))

            david_m_winner = dm.minimax_winner(d_profile, candidates, num_cands, None, matrix)
            mala_m_winner = mm.Minimax(v, candidates)

            if david_c_winner != mala_c_winner:
                with open(diff_file, "a") as ef:
                    ef.write(f"{filename} -- Condorcet -- david: {david_c_winner} , mala: {mala_c_winner} \n")

            if david_m_winner != mala_m_winner:
                with open(diff_file, "a") as ef:
                    ef.write(f"{filename} -- Minimax -- david: {david_m_winner} , mala: {mala_m_winner} \n")
        
            with open(processed_file, "a") as ef:
                ef.write(f"'{filename}', \n")

                

